import React from "react";
import { createStyles, Theme, makeStyles } from "@material-ui/core/styles";
import Drawer from "@material-ui/core/Drawer";
import AppBar from "@material-ui/core/AppBar";
import CssBaseline from "@material-ui/core/CssBaseline";
import Toolbar from "@material-ui/core/Toolbar";
import List from "@material-ui/core/List";
import Typography from "@material-ui/core/Typography";
import ListItem from "@material-ui/core/ListItem";
import ListItemIcon from "@material-ui/core/ListItemIcon";
import ListItemText from "@material-ui/core/ListItemText";
import {
  SvgIcon,
  ThemeProvider,
  createMuiTheme,
  Box,
  Divider,
  ListSubheader,
} from "@material-ui/core";

import Editor from "@monaco-editor/react";

const drawerWidth = 240;

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    root: {
      display: "flex",
    },
    appBar: {
      zIndex: theme.zIndex.drawer + 1,
    },
    drawer: {
      width: drawerWidth,
      flexShrink: 0,
    },
    drawerPaper: {
      width: drawerWidth,
    },
    drawerContainer: {
      overflow: "auto",
    },
    content: {
      height: "100vh",
      flexGrow: 1,
      flex: 1,
    },
    listSection: {
      backgroundColor: "#212124",
    },
  })
);

const PostIcon: React.FC = (props) => {
  return (
    <SvgIcon {...props} fontSize={"large"}>
      <rect y="5" width="24" height="14" rx="2" fill="#ECC283" />
      <path
        d="M5.55469 12.5527V14H4.52637V9.73438H6.22852C6.55469 9.73438 6.84277 9.79492 7.09277 9.91602C7.34473 10.0352 7.53906 10.2061 7.67578 10.4287C7.81445 10.6494 7.88379 10.9004 7.88379 11.1816C7.88379 11.5977 7.73438 11.9307 7.43555 12.1807C7.13867 12.4287 6.73047 12.5527 6.21094 12.5527H5.55469ZM5.55469 11.7588H6.22852C6.42773 11.7588 6.5791 11.709 6.68262 11.6094C6.78809 11.5098 6.84082 11.3691 6.84082 11.1875C6.84082 10.9883 6.78711 10.8291 6.67969 10.71C6.57227 10.5908 6.42578 10.5303 6.24023 10.5283H5.55469V11.7588ZM12.0469 11.9551C12.0469 12.3711 11.9697 12.7393 11.8154 13.0596C11.6611 13.3799 11.4414 13.627 11.1562 13.8008C10.873 13.9727 10.5498 14.0586 10.1865 14.0586C9.82324 14.0586 9.50098 13.9756 9.21973 13.8096C8.93848 13.6416 8.71875 13.4023 8.56055 13.0918C8.4043 12.7812 8.32227 12.4248 8.31445 12.0225V11.7822C8.31445 11.3643 8.39062 10.9961 8.54297 10.6777C8.69727 10.3574 8.91699 10.1104 9.20215 9.93652C9.48926 9.7627 9.81543 9.67578 10.1807 9.67578C10.542 9.67578 10.8643 9.76172 11.1475 9.93359C11.4307 10.1055 11.6504 10.3506 11.8066 10.6689C11.9648 10.9854 12.0449 11.3486 12.0469 11.7588V11.9551ZM11.001 11.7764C11.001 11.3525 10.9297 11.0312 10.7871 10.8125C10.6465 10.5918 10.4443 10.4814 10.1807 10.4814C9.66504 10.4814 9.39258 10.8682 9.36328 11.6416L9.36035 11.9551C9.36035 12.373 9.42969 12.6943 9.56836 12.9189C9.70703 13.1436 9.91309 13.2559 10.1865 13.2559C10.4463 13.2559 10.6465 13.1455 10.7871 12.9248C10.9277 12.7041 10.999 12.3867 11.001 11.9727V11.7764ZM14.7773 12.8662C14.7773 12.7158 14.7236 12.5986 14.6162 12.5146C14.5107 12.4307 14.3242 12.3438 14.0566 12.2539C13.7891 12.1641 13.5703 12.0771 13.4004 11.9932C12.8477 11.7217 12.5713 11.3486 12.5713 10.874C12.5713 10.6377 12.6396 10.4297 12.7764 10.25C12.915 10.0684 13.1104 9.92773 13.3623 9.82812C13.6143 9.72656 13.8975 9.67578 14.2119 9.67578C14.5186 9.67578 14.793 9.73047 15.0352 9.83984C15.2793 9.94922 15.4688 10.1055 15.6035 10.3086C15.7383 10.5098 15.8057 10.7402 15.8057 11H14.7803C14.7803 10.8262 14.7266 10.6914 14.6191 10.5957C14.5137 10.5 14.3701 10.4521 14.1885 10.4521C14.0049 10.4521 13.8594 10.4932 13.752 10.5752C13.6465 10.6553 13.5938 10.7578 13.5938 10.8828C13.5938 10.9922 13.6523 11.0918 13.7695 11.1816C13.8867 11.2695 14.0928 11.3613 14.3877 11.457C14.6826 11.5508 14.9248 11.6523 15.1143 11.7617C15.5752 12.0273 15.8057 12.3936 15.8057 12.8604C15.8057 13.2334 15.665 13.5264 15.3838 13.7393C15.1025 13.9521 14.7168 14.0586 14.2266 14.0586C13.8809 14.0586 13.5674 13.9971 13.2861 13.874C13.0068 13.749 12.7959 13.5791 12.6533 13.3643C12.5127 13.1475 12.4424 12.8984 12.4424 12.6172H13.4736C13.4736 12.8457 13.5322 13.0146 13.6494 13.124C13.7686 13.2314 13.9609 13.2852 14.2266 13.2852C14.3965 13.2852 14.5303 13.249 14.6279 13.1768C14.7275 13.1025 14.7773 12.999 14.7773 12.8662ZM19.6816 10.5283H18.4014V14H17.373V10.5283H16.1162V9.73438H19.6816V10.5283Z"
        fill="#424242"
      />
    </SvgIcon>
  );
};

const PutIcon: React.FC = (props) => {
  return (
    <SvgIcon {...props} fontSize={"large"}>
      <rect y="5" width="24" height="14" rx="2" fill="#83B9EC" />
      <path
        d="M7.50879 12.5527V14H6.48047V9.73438H8.18262C8.50879 9.73438 8.79688 9.79492 9.04688 9.91602C9.29883 10.0352 9.49316 10.2061 9.62988 10.4287C9.76855 10.6494 9.83789 10.9004 9.83789 11.1816C9.83789 11.5977 9.68848 11.9307 9.38965 12.1807C9.09277 12.4287 8.68457 12.5527 8.16504 12.5527H7.50879ZM7.50879 11.7588H8.18262C8.38184 11.7588 8.5332 11.709 8.63672 11.6094C8.74219 11.5098 8.79492 11.3691 8.79492 11.1875C8.79492 10.9883 8.74121 10.8291 8.63379 10.71C8.52637 10.5908 8.37988 10.5303 8.19434 10.5283H7.50879V11.7588ZM13.7344 9.73438V12.5264C13.7344 12.8428 13.667 13.1172 13.5322 13.3496C13.3975 13.5801 13.2041 13.7559 12.9521 13.877C12.7002 13.998 12.4023 14.0586 12.0586 14.0586C11.5391 14.0586 11.1299 13.9238 10.8311 13.6543C10.5322 13.3848 10.3799 13.0156 10.374 12.5469V9.73438H11.4082V12.5674C11.4199 13.0342 11.6367 13.2676 12.0586 13.2676C12.2715 13.2676 12.4326 13.209 12.542 13.0918C12.6514 12.9746 12.7061 12.7842 12.7061 12.5205V9.73438H13.7344ZM17.7275 10.5283H16.4473V14H15.4189V10.5283H14.1621V9.73438H17.7275V10.5283Z"
        fill="#424242"
      />
    </SvgIcon>
  );
};

const GetIcon: React.FC = (props) => {
  return (
    <SvgIcon {...props} fontSize={"large"}>
      <rect y="5" width="24" height="14" rx="2" fill="#83ECA0" />
      <path
        d="M10.1689 13.4727C10.0107 13.6484 9.7793 13.79 9.47461 13.8975C9.16992 14.0049 8.83594 14.0586 8.47266 14.0586C7.91406 14.0586 7.46777 13.8877 7.13379 13.5459C6.7998 13.2041 6.62109 12.7285 6.59766 12.1191L6.59473 11.75C6.59473 11.3301 6.66895 10.9639 6.81738 10.6514C6.96582 10.3369 7.17773 10.0957 7.45312 9.92773C7.73047 9.75781 8.05078 9.67285 8.41406 9.67285C8.94531 9.67285 9.35742 9.79492 9.65039 10.0391C9.94531 10.2812 10.1172 10.6436 10.166 11.126H9.17578C9.14062 10.8877 9.06445 10.7178 8.94727 10.6162C8.83008 10.5146 8.66406 10.4639 8.44922 10.4639C8.19141 10.4639 7.99219 10.5732 7.85156 10.792C7.71094 11.0107 7.63965 11.3232 7.6377 11.7295V11.9873C7.6377 12.4131 7.70996 12.7334 7.85449 12.9482C8.00098 13.1611 8.23047 13.2676 8.54297 13.2676C8.81055 13.2676 9.00977 13.208 9.14062 13.0889V12.4268H8.42578V11.7207H10.1689V13.4727ZM13.4121 12.1924H11.7949V13.209H13.7051V14H10.7666V9.73438H13.7109V10.5283H11.7949V11.4277H13.4121V12.1924ZM17.5312 10.5283H16.251V14H15.2227V10.5283H13.9658V9.73438H17.5312V10.5283Z"
        fill="#424242"
      />
    </SvgIcon>
  );
};

const HeadIcon: React.FC = (props) => {
  return (
    <SvgIcon {...props} fontSize={"large"}>
      <rect y="5" width="24" height="14" rx="2" fill="#9B9B9B" />
      <path
        d="M8.11523 14H7.09277V12.2188H5.57812V14H4.5498V9.73438H5.57812V11.4277H7.09277V9.73438H8.11523V14ZM11.4141 12.1924H9.79688V13.209H11.707V14H8.76855V9.73438H11.7129V10.5283H9.79688V11.4277H11.4141V12.1924ZM14.5488 13.2031H13.1396L12.8936 14H11.7949L13.3594 9.73438H14.3262L15.9023 14H14.7979L14.5488 13.2031ZM13.3857 12.4092H14.3027L13.8428 10.9297L13.3857 12.4092ZM16.2158 14V9.73438H17.5898C17.9668 9.73438 18.3057 9.82031 18.6064 9.99219C18.9072 10.1621 19.1416 10.4033 19.3096 10.7158C19.4795 11.0264 19.5654 11.375 19.5674 11.7617V11.958C19.5674 12.3486 19.4844 12.6992 19.3184 13.0098C19.1543 13.3184 18.9219 13.5605 18.6211 13.7363C18.3223 13.9102 17.9883 13.998 17.6191 14H16.2158ZM17.2441 10.5283V13.209H17.6016C17.8965 13.209 18.123 13.1045 18.2812 12.8955C18.4395 12.6846 18.5186 12.3721 18.5186 11.958V11.7734C18.5186 11.3613 18.4395 11.0508 18.2812 10.8418C18.123 10.6328 17.8926 10.5283 17.5898 10.5283H17.2441Z"
        fill="#424242"
      />
    </SvgIcon>
  );
};

const DeleteIcon: React.FC = (props) => {
  return (
    <SvgIcon {...props} fontSize={"large"}>
      <rect y="5" width="24" height="14" rx="2" fill="#EC8383" />
      <path
        d="M1.79883 14V9.73438H3.17285C3.5498 9.73438 3.88867 9.82031 4.18945 9.99219C4.49023 10.1621 4.72461 10.4033 4.89258 10.7158C5.0625 11.0264 5.14844 11.375 5.15039 11.7617V11.958C5.15039 12.3486 5.06738 12.6992 4.90137 13.0098C4.7373 13.3184 4.50488 13.5605 4.2041 13.7363C3.90527 13.9102 3.57129 13.998 3.20215 14H1.79883ZM2.82715 10.5283V13.209H3.18457C3.47949 13.209 3.70605 13.1045 3.86426 12.8955C4.02246 12.6846 4.10156 12.3721 4.10156 11.958V11.7734C4.10156 11.3613 4.02246 11.0508 3.86426 10.8418C3.70605 10.6328 3.47559 10.5283 3.17285 10.5283H2.82715ZM8.32324 12.1924H6.70605V13.209H8.61621V14H5.67773V9.73438H8.62207V10.5283H6.70605V11.4277H8.32324V12.1924ZM10.0635 13.209H11.8535V14H9.03516V9.73438H10.0635V13.209ZM14.9326 12.1924H13.3154V13.209H15.2256V14H12.2871V9.73438H15.2314V10.5283H13.3154V11.4277H14.9326V12.1924ZM19.0518 10.5283H17.7715V14H16.7432V10.5283H15.4863V9.73438H19.0518V10.5283ZM22.1338 12.1924H20.5166V13.209H22.4268V14H19.4883V9.73438H22.4326V10.5283H20.5166V11.4277H22.1338V12.1924Z"
        fill="#424242"
      />
    </SvgIcon>
  );
};

const PatchIcon: React.FC = (props) => {
  return (
    <SvgIcon {...props} fontSize={"large"}>
      <rect y="5" width="24" height="14" rx="2" fill="#9183EC" />
      <path
        d="M3.8584 12.5527V14H2.83008V9.73438H4.53223C4.8584 9.73438 5.14648 9.79492 5.39648 9.91602C5.64844 10.0352 5.84277 10.2061 5.97949 10.4287C6.11816 10.6494 6.1875 10.9004 6.1875 11.1816C6.1875 11.5977 6.03809 11.9307 5.73926 12.1807C5.44238 12.4287 5.03418 12.5527 4.51465 12.5527H3.8584ZM3.8584 11.7588H4.53223C4.73145 11.7588 4.88281 11.709 4.98633 11.6094C5.0918 11.5098 5.14453 11.3691 5.14453 11.1875C5.14453 10.9883 5.09082 10.8291 4.9834 10.71C4.87598 10.5908 4.72949 10.5303 4.54395 10.5283H3.8584V11.7588ZM8.63965 13.2031H7.23047L6.98438 14H5.88574L7.4502 9.73438H8.41699L9.99316 14H8.88867L8.63965 13.2031ZM7.47656 12.4092H8.39355L7.93359 10.9297L7.47656 12.4092ZM13.3037 10.5283H12.0234V14H10.9951V10.5283H9.73828V9.73438H13.3037V10.5283ZM17.1094 12.5557C17.0957 12.8525 17.0156 13.1152 16.8691 13.3438C16.7227 13.5703 16.5166 13.7461 16.251 13.8711C15.9873 13.9961 15.6855 14.0586 15.3457 14.0586C14.7852 14.0586 14.3438 13.876 14.0215 13.5107C13.6992 13.1455 13.5381 12.6299 13.5381 11.9639V11.7529C13.5381 11.335 13.6104 10.9697 13.7549 10.6572C13.9014 10.3428 14.1113 10.1006 14.3848 9.93066C14.6582 9.75879 14.9746 9.67285 15.334 9.67285C15.8516 9.67285 16.2676 9.80957 16.582 10.083C16.8965 10.3545 17.0752 10.7295 17.1182 11.208H16.0928C16.085 10.9482 16.0195 10.7617 15.8965 10.6484C15.7734 10.5352 15.5859 10.4785 15.334 10.4785C15.0781 10.4785 14.8906 10.5742 14.7715 10.7656C14.6523 10.957 14.5898 11.2627 14.584 11.6826V11.9844C14.584 12.4395 14.6406 12.7646 14.7539 12.96C14.8691 13.1553 15.0664 13.2529 15.3457 13.2529C15.582 13.2529 15.7627 13.1973 15.8877 13.0859C16.0127 12.9746 16.0791 12.7979 16.0869 12.5557H17.1094ZM21.1611 14H20.1387V12.2188H18.624V14H17.5957V9.73438H18.624V11.4277H20.1387V9.73438H21.1611V14Z"
        fill="#424242"
      />
    </SvgIcon>
  );
};

const icons = [
  <PatchIcon />,
  <DeleteIcon />,
  <GetIcon />,
  <PutIcon />,
  <HeadIcon />,
  <PostIcon />,
];

export default function ClippedDrawer() {
  const classes = useStyles();

  const darkTheme = createMuiTheme({
    palette: {
      background: {
        default: "#212124",
        paper: "#212124",
      },
      primary: { main: "#313133" },
      type: "dark",
    },
  });

  return (
    <ThemeProvider theme={darkTheme}>
      <div className={classes.root}>
        <CssBaseline />
        <AppBar position="fixed" className={classes.appBar}>
          <Toolbar>
            <Typography variant="h6" noWrap>
              http_api devtools
            </Typography>
          </Toolbar>
        </AppBar>
        <Drawer
          className={classes.drawer}
          variant="permanent"
          classes={{
            paper: classes.drawerPaper,
          }}
        >
          <Toolbar />
          <div className={classes.drawerContainer}>
            <List>
              <ListSubheader className={classes.listSection}>
                <ListItem button>
                  <ListItemText primary={"Requests"} />
                </ListItem>
              </ListSubheader>
              <ListItem button>
                <ListItemIcon>
                  <PatchIcon />
                </ListItemIcon>
                <ListItemText primary={"Patch"} />
              </ListItem>
              <ListItem button>
                <ListItemIcon>
                  <GetIcon />
                </ListItemIcon>
                <ListItemText primary={"Get"} />
              </ListItem>
              <ListItem button>
                <ListItemIcon>
                  <PostIcon />
                </ListItemIcon>
                <ListItemText primary={"Post"} />
              </ListItem>
              <ListItem button>
                <ListItemIcon>
                  <PutIcon />
                </ListItemIcon>
                <ListItemText primary={"Put"} />
              </ListItem>
              <ListItem button>
                <ListItemIcon>
                  <HeadIcon />
                </ListItemIcon>
                <ListItemText primary={"Head"} />
              </ListItem>
              <ListItem button>
                <ListItemIcon>
                  <DeleteIcon />
                </ListItemIcon>
                <ListItemText primary={"Delete"} />
              </ListItem>
              {new Array(100).fill(1).map((_, index) => {
                return (
                  <ListItem button>
                    <ListItemIcon>{icons[index % 6]}</ListItemIcon>
                    <ListItemText primary={`/photos/${index + 342}`} />
                  </ListItem>
                );
              })}
            </List>
          </div>
        </Drawer>
        <main className={classes.content}>
          <Box height="100%" display="flex" flexDirection="column">
            <Box>
              <Toolbar />
            </Box>
            <Box
              position="relative"
              display="flex"
              width="100%"
              flexGrow={1}
              flexDirection="column"
            >
              <Box
                flex={1}
                position="relative"
                display="flex"
                flexGrow={1}
                flexDirection="column"
              >
                <Editor
                  language="json"
                  theme="dark"
                  value={JSON.stringify({ test: "test" }, undefined, 2)}
                />
              </Box>
              <Divider />
              <Box
                flex={1}
                position="relative"
                display="flex"
                flexGrow={1}
                flexDirection="column"
              >
                <Editor
                  language="json"
                  theme="dark"
                  value={JSON.stringify({ test: "test" }, undefined, 2)}
                />
              </Box>
            </Box>
          </Box>
        </main>
      </div>
    </ThemeProvider>
  );
}
